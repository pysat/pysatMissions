os: linux
language: python
dist: xenial
jobs:
  include:
    - name: 'docs'
      python: '3.6'
      script:
        - sphinx-build -E -b html docs dist/docs
        - sphinx-build -b linkcheck docs dist/docs
    - name: '3.6 w/ numpy 1.16 (NEP 029)'
      python: '3.6'
      env: NUMPY_VER=1.16
      script: pytest --cov=pysatMissions/
    - name: '3.7 with flake8'
      python: '3.7'
      script: pytest --flake8 --cov=pysatMissions/
    - name: '3.8'
      python: '3.8'
      script: pytest --cov=pysatMissions/

services: xvfb
cache: pip
addons:
  apt:
    packages:
    - gfortran

install:
  - sudo apt-get update
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - source "$HOME/miniconda/etc/profile.d/conda.sh"
  - hash -r
  - conda config --set always_yes True --set changeps1 False
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  # Create conda test environment
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
  - conda activate test-environment
  # Once pysat 3.0 is released, remove the custom pysat install and change
  # this to:
  # - while read requirement; do conda install --yes $requirement; done < requirements.txt1
  # Check for custom numpy version install
  - if [ -z ${NUMPY_VER} ]; then
      conda install numpy==1.18.5;
    else
      conda install numpy==$NUMPY_VER;
    fi
  # Dependencies not available through conda, install through pip
  - pip install aacgmv2
  - pip install pyEphem
  - pip install sgp4

  # Get dependencies not provided by conda from pip (testing dependencies)
  - pip install -r test_requirements.txt

  # Custom apexpy install
  - cd ..
  - echo 'cloning apexpy'
  - git clone --single-branch --branch v3-0-rc1 https://github.com/aburrell/apexpy.git
  - cd ./apexpy
  - python setup.py install >/dev/null

  # Prepare modified pysat install
  - cd ..
  - echo 'cloning pysat'
  - git clone --single-branch --branch v3-0-rc1 https://github.com/pysat/pysat.git
  - echo 'installing pysat'
  - cd ./pysat
  # set up data directory
  - mkdir /home/travis/build/pysatData
  # install pysat
  # Install the pysat requirements
  - while read requirement; do conda install --yes $requirement; done < requirements.txt
  - python setup.py install >/dev/null
  - export PYTHONPATH=$PYTHONPATH:$(pwd)

  # Install pysatMagVect after pysat
  - pip install pysatMagVect >/dev/null

  # install pysatMissions
  - cd ../pysatMissions
  - python setup.py install

after_success:
  - coveralls --rcfile=setup.cfg
