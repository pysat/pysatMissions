# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python Unit Tests and Style

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f test_requirements.txt ]; then pip install -r test_requirements.txt; fi
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # Delete once pysat 3.0.0 is released, replace with above
        pip install numpy scipy pandas xarray netCDF4 portalocker dask toolz
        pip install sgp4 pyEphem apexpy aacgmv2
        pip install --index-url https://test.pypi.org/simple/ pysat==3.0.0rc2
        pip install --no-binary :pysatMagVect: pysatMagVect
    - name: Set up pysat
      run: |
        mkdir pysatData
        python -c "import pysat; pysat.params['data_dirs'] = './pysatData'"
    - name: Check Documentation
      run: |
        sphinx-build -E -b html docs dist/docs
        sphinx-build -b linkcheck docs dist/docs
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env: GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        pytest --cov=pysatMissions/
        coveralls --rcfile=setup.cfg
