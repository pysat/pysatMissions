# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Pytest with Flake8

on: [push, pull_request]

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os: ["ubuntu-latest", "windows-latest"]
        numpy_ver: ["latest"]
        include:
          - python-version: "3.8"
            numpy_ver: "1.21"
            os: ubuntu-latest

    name: Python ${{ matrix.python-version }} on ${{ matrix.os }} with numpy ${{ matrix.numpy_ver }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install requirements for testing setup
      run: |
        python -m pip install --upgrade pip
        pip install -r test_requirements.txt

    - name: Install NEP29 dependencies
      if: ${{ matrix.numpy_ver != 'latest'}}
      run: |
        pip install -r requirements.txt -c nep29_constraints.txt
        pip install aacgmv2 -c nep29_constraints.txt
        pip install apexpy -c nep29_constraints.txt
        pip install OMMBV -c nep29_constraints.txt

    - name: Install dependencies with latest numpy
      if: ${{ matrix.numpy_ver == 'latest'}}
      run: |
        pip install -r requirements.txt
        pip install aacgmv2 --no-binary==aacgmv2
        pip install apexpy --no-binary==apexpy
        pip install OMMBV --no-binary==OMMBV

    - name: Set up pysat
      run: |
        mkdir pysatData
        python -c "import pysat; pysat.params['data_dirs'] = 'pysatData'"

    - name: Test PEP8 compliance
      run: flake8 . --count --select=D,E,F,H,W --show-source --statistics

    - name: Evaluate complexity
      run: flake8 . --count --exit-zero --max-complexity=10 --statistics

    - name: Test with pytest
      run: |
        echo $PATH
        pytest --cov=pysatMissions/

    - name: Publish results to coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: coveralls --rcfile=setup.cfg --service=github
